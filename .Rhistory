ran <- rnorm(44)
el <- vector()
for (i in 1:15) {
el[i] <- (ran[i]^3) + 12
print(el)
}
# Se almacenan los valores en un data frame
df.al <- data.frame(ran = ran[1:15],
val = el)
df.al
ran <- rnorm(44)
loop <- elevado()
ran <- rnorm(44)
loop <- vector()
for (i in 1:15) {
loop[i] <- (ran[i]^3) + 12
print(loop)}
df.al <- data.frame(ran = ran[1:15],
val = loop)
df.al
ran <- rnorm(44)
loop <- 0
for (i in 1:15) {
loop[i] <- (ran[i]^3) + 12
print(loop[i])}
df.al <- data.frame(ran = ran[1:15],
val = loop)
df.al
set.seed(134)
x <- round(rnorm(1000, 175, 6), 1)
install.packages("DescTools")
set.seed(134)
x <- round(rnorm(1000, 175, 6), 1)
install.packages("DescTools")
median(x)
mean(x)
mode(x)
quantile(x, seq(0.1,0.9, by = 0.1))
quantile(x, probs = 0.75) - quantile(x, probs = 0.25)
var(x)
sd(x)
Mode(x)
Mode(x)
mode(x)
`mode<-`(x)
library(DescTools)
Mode(x)
str(mtcars)
summary(mtcars)
head(mtcars)
tail(mtcars)
View(mtcars)
install.packages(ggplot2)
install.packages(library(ggplot2))
install.packages("ggplot2")
library(ggplot2)
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg )) +
geom_point()
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg )) +
geom_point()
ggplot(mtcars, aes(x=wt, y = dist, colour = mpg )) +
geom_point()
ggplot(mtcars, aes(x=wt, y = dist, colour = am )) +
geom_point()
ggplot(mtcars, aes(x=wt, y = dist, colour = am )) +
geom_point()
ggplot(mtcars, aes(x=wt, y = dist, colour = am )) +geom_point()
rlang::last_trace()
ggplot(mtcars, aes(x=wt, y=dist, colour=am)) + geom_point()
library(dplyr)
library(ggplot2)
library(ggplot2)
altura <- read.csv("../boxp.csv", sep = ";")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("ggplot2")
read.csv("C:\Users\Mr. Eduar\Downloads\BD_Altura_Alunos")
setwd("C:\Users\Mr. Eduar\Downloads\BD_Altura_Alunos")
data.url <- read.csv("https://github.com/beduExpert/Programacion-con-R-2021/blob/main/Sesion-03/Reto-01/BD_Altura_Alunos.csv")
hist(altura$Altura,
breaks = 20,
main = " Grafica de alturas",
ylab = "Alumnos",
xlab = "Altura",
col = "red")
hist(altura$Altura,
+      breaks = 20,
data.url <- read.csv("https://github.com/beduExpert/Programacion-con-R-2021/blob/main/Sesion-03/Reto-01/BD_Altura_Alunos.csv",sep=";")
hist(altura$Altura,
+      breaks = 46,
head(data)
data.url <- read.csv("https://github.com//beduExpert//Programacion-con-R-2021//blob//main//Sesion-03//Reto-01//BD_Altura_Alunos.csv",sep=";")
data(head)
data$Altura
data <- read.csv("https://github.com//beduExpert//Programacion-con-R-2021//blob//main//Sesion-03//Reto-01//BD_Altura_Alunos.csv",sep=";")
data(head)
data$Altura
data$Alturas
my_scatplot<- ggplot(mtcars,aes(x=st,y=mpg))+ geom_point()
my_scatplot<- ggplot(mtcars,aes(x=st,y=mpg)) + geom_point()
nba <- read.csv("players_stats.csv")
nba <- read.csv("https://github.com/beduExpert/Programacion-R-MASIVO-2021/blob/main/Sesion-03/Reto-02/players_stats.csv")
names(nba)
names(nba)
name(nba)
nba(name)
mnba <-mean(nba$MIN)
ggplot(nba, aes(MIN))+
geom_histogram(binwidth = 30, col="black", fill = "blue") +
ggtitle("Histograma de Minutos por jugador", paste("Media=",mnba)) +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  mnba, col = "red", lwd = 1.5, lty =2)+
theme_light()
mnba <-mean(nba$MIN)
ggplot2(nba, aes(MIN))+
geom_histogram(binwidth = 30, col="black", fill = "blue") +
ggtitle("Histograma de Minutos por jugador", paste("Media=",mnba)) +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  mnba, col = "red", lwd = 1.5, lty =2)+
theme_light()
nba <- read.csv("https://github.com/beduExpert/Programacion-R-MASIVO-2021/blob/main/Sesion-03/Reto-02/players_stats.csv")
nba <- read.csv("https://github.com//beduExpert//Programacion-R-MASIVO-2021//blob//main//Sesion-03//Reto-02//players_stats.csv")
name(nba)
names(nba)
install.packages("scales")
mex <- read.csv("C19Mexico.csv")
head(mex); tail(mex)
SYS.TIME()
Sys.time()
library(ggplot2)
x <- seq(-4, 4, 0.01)*6 + 175 # Algunos posibles valores que puede tomar la v.a. X (mínimo: mu-4sigma, máximo: mu+4sigma)
y <- dnorm(x, mean = 175, sd = 6) # Valores correspondientes de la función de densidad de probabilidad
x
pnorm(q = 18, mean = 16, sd = 1, lower.tail = FALSE)
pnorm(q = 18, mean = 16, sd = 1, lower.tail = FALSE)
x <- seq(-4, 4, 0.01) + 16 # Algunos posibles valores que puede tomar la v.a. X (mínimo: mu-4sigma, máximo: mu+4sigma)
x <- seq(-4, 4, 0.01) + 16
pnorm(q = 18, mean = 16, sd = 1, lower.tail = FALSE)
x <- seq(-4, 4, 0.01) + 16
y <- dnorm(x, mean = 16, sd = 1)
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 16, " y ", sigma == 1)))
polygon(c(18, x[x>=18], max(x)), c(0, y[x>=18], 0), col="yellow")
pnorm(q = 18, mean = 16, sd = 1, lower.tail = FALSE)
pnorm(q = 58, mean = 60, sd = 8/10 )
